using Microsoft.AspNetCore.Mvc;
using Polygent.Api.Dtos;
using Polygent.Api.EndpointsInfrastructure;
using Polygent.Logic.Interfaces;

namespace Polygent.Api.Endpoints.Tasks;

internal sealed class CreateTaskEndpoint : IPostEndpoint
{
    public string Route => "/api/workspaces/{workspaceId}/tasks";
    
    public Delegate Execute => static async (
        [FromRoute] int workspaceId,
        [FromBody] CreateTaskDto dto,
        ITaskRepository taskRepository,
        CancellationToken cancellationToken) =>
    {
        var now = DateTime.UtcNow;
        var request = new TaskEntity(
            Id: 0, // ID will be generated by the database
            WorkspaceId: workspaceId,
            Name: dto.Name,
            Type: dto.Type,
            WorkingDirectory: dto.WorkingDirectory,
            ScriptType: dto.ScriptType,
            ScriptContent: dto.ScriptContent,
            CreatedAt: now,
            UpdatedAt: now
        );

        var id = await taskRepository.CreateAsync(request, cancellationToken);
        
        var taskDto = new TaskDto(
            id,
            request.WorkspaceId,
            request.Name,
            request.Type,
            request.WorkingDirectory,
            request.ScriptType,
            request.ScriptContent,
            request.CreatedAt,
            request.UpdatedAt
        );
        
        return Results.Created($"/api/tasks/{id}", taskDto);
    };
}